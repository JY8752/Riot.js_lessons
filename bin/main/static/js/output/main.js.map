{"version":3,"sources":["../../../node_modules/riot/riot.esm.js","../../../node_modules/bianco.dom-to-array/index.next.js","../../../node_modules/bianco.query/index.next.js","../../../node_modules/@riotjs/hot-reload/index.js","../../../node_modules/axios/lib/helpers/bind.js","../../../node_modules/axios/lib/utils.js","../../../node_modules/axios/lib/helpers/buildURL.js","../../../node_modules/axios/lib/core/InterceptorManager.js","../../../node_modules/axios/lib/core/transformData.js","../../../node_modules/axios/lib/cancel/isCancel.js","../../../node_modules/axios/lib/helpers/normalizeHeaderName.js","../../../node_modules/axios/lib/core/enhanceError.js","../../../node_modules/axios/lib/core/createError.js","../../../node_modules/axios/lib/core/settle.js","../../../node_modules/axios/lib/helpers/cookies.js","../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../node_modules/axios/lib/helpers/combineURLs.js","../../../node_modules/axios/lib/core/buildFullPath.js","../../../node_modules/axios/lib/helpers/parseHeaders.js","../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../node_modules/axios/lib/adapters/xhr.js","../../../node_modules/process/browser.js","../../../node_modules/axios/lib/defaults.js","../../../node_modules/axios/lib/core/dispatchRequest.js","../../../node_modules/axios/lib/core/mergeConfig.js","../../../node_modules/axios/lib/core/Axios.js","../../../node_modules/axios/lib/cancel/Cancel.js","../../../node_modules/axios/lib/cancel/CancelToken.js","../../../node_modules/axios/lib/helpers/spread.js","../../../node_modules/axios/lib/axios.js","../../../node_modules/axios/index.js","../../../node_modules/path-browserify/index.js","../../../node_modules/dotenv/lib/main.js","../../../utils/api.js","components/search.riot","components/spinner.riot","components/result.riot","../../../node_modules/@riotjs/observable/dist/observable.js","app.riot","main.js"],"names":["camelToDashCase","string","replace","toLowerCase","dashToCamelCase","_","c","toUpperCase","DOMattributesToObject","element","Array","from","attributes","reduce","acc","attribute","name","value","moveChildren","source","target","firstChild","appendChild","cleanNode","node","clearChildren","childNodes","children","forEach","removeNode","parentNode","remove","removeChild","EACH","IF","SIMPLE","TAG","SLOT","bindingTypes","ATTRIBUTE","EVENT","TEXT","VALUE","expressionTypes","createTemplateMeta","componentTemplate","fragment","dom","cloneNode","avoidDOMInjection","indexOf","slice","append","get","parent","start","end","before","isSelect","noSelection","child","insertBefore","selected","selectedIndex","call","querySelectorAll","eqeq","a","b","identity","O","indexOf$1","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","length","m","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","list","i","nextSibling","drop","DELETION","INSERTION","SKIP","SKIP_OND","HS","futureStart","futureChanges","currentChanges","k","minLen","link","tresh","nodes","index","idxInOld","findK","newi","oldi","prev","diff","ptr","OND","rows","cols","d","r","pv","cv","pd","v","outer","diffIdx","applyDiff","currentLength","live","currentIndex","push","ktr","j","lo","hi","mid","smartDiff","dropChild","domdiff","options","currentSame","futureSame","checkType","type","isSvg","el","owner","ownerSVGElement","isTemplate","isNil","content","isFunction","isBoolean","isObject","UNMOUNT_SCOPE","Symbol","EachBinding","Object","seal","mount","scope","parentScope","update","placeholder","childrenMap","collection","evaluate","items","createPatch","newChildrenMap","batches","patch","values","fn","unmount","redundant","item","info","pop","template","context","mustFilterItem","condition","Boolean","extendScope","_ref","itemName","indexName","binding","getKey","root","isTemplateTag","Map","create","key","oldItem","clone","mustMount","meta","delete","set","_ref2","document","createTextNode","assign","createDOM","IfBinding","pristine","mustUnmount","create$1","panic","message","Error","memoize","cache","cached","val","has","evaluateAttributeExpressions","REMOVE_ATTRIBUTE","SET_ATTIBUTE","ElementProto","Element","prototype","isNativeHtmlProperty","hasOwnProperty","setAllAttributes","entries","attributeExpression","removeAllAttributes","newAttributes","oldAttributes","newKeys","keys","filter","includes","removeAttribute","oldValue","getMethod","normalizeValue","RE_EVENTS_PREFIX","getCallbackAndOptions","isArray","EventListener","handleEvent","event","ListenersWeakMap","WeakMap","createListener","listener","eventExpression","normalizedEventName","eventListener","callback","handler","mustAddEvent","removeEventListener","addEventListener","normalizeStringValue","getTextNode","childNodeIndex","nodeType","Node","COMMENT_NODE","textNode","replaceChild","textExpression","data","valueExpression","expression","expressions","Expression","apply","create$2","flattenCollectionMethods","methods","method","map","create$3","COMPONENTS_IMPLEMENTATION_MAP","DOM_COMPONENT_INSTANCE_PROPERTY","PLUGINS_SET","Set","IS_DIRECTIVE","VALUE_ATTRIBUTE","MOUNT_METHOD_KEY","UPDATE_METHOD_KEY","UNMOUNT_METHOD_KEY","SHOULD_UPDATE_KEY","ON_BEFORE_MOUNT_KEY","ON_MOUNTED_KEY","ON_BEFORE_UPDATE_KEY","ON_UPDATED_KEY","ON_BEFORE_UNMOUNT_KEY","ON_UNMOUNTED_KEY","PROPS_KEY","STATE_KEY","SLOTS_KEY","ROOT_KEY","IS_PURE_SYMBOL","for","PARENT_KEY_SYMBOL","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","globals","freeze","__proto__","extendParentScope","attr","getRealParent","undefined","SlotBinding","getTemplateScope","templateData","slots","find","id","realParent","create$6","html","bindings","moveSlotInnerContent","mustRemoveRoot","slot","createSlot","getTag","component","slotsToMarkup","slotBindings","concat","TagBinding","tag","getComponent","keepRootTag","create$4","fixTextExpressionsOffset","textExpressionsOffset","e","create$5","templateTagOffset","selector","redundantAttribute","querySelector","bindingExpressions","createHTMLTree","createElement","innerHTML","createSVGTree","container","svgNode","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createDOMTree","injectDOM","createTemplateDOM","TemplateChunk","Math","max","bindingsData","DOMBindings","createBinding","createExpression","noop","autobindMethods","bind","callOrAssign","constructor","defineProperty","enumerable","writable","configurable","defineProperties","properties","defineDefaults","defaults","domToArray","els","test","toString","$","ctx","normalize","parseNodes","names","n","attrs","props","prop","setAttribute","CSS_BY_NAME","STYLE_NODE_SELECTOR","getStyleNode","style","head","cssManager","add","css","inject","join","curry","_len","arguments","_key","_len2","args","_key2","getName","tagName","COMPONENT_CORE_HELPERS","$$","PURE_COMPONENT_API","COMPONENT_LIFECYCLE_METHODS","MOCKED_TEMPLATE_INTERFACE","evaluateInitialProps","initialProps","bindDOMNodeToComponentObject","createCoreAPIMethods","mapFunction","componentTemplateFactory","components","createPureComponent","pureFactoryFunction","createComponent","exports","templateFn","createSubcomponents","_ref3","componentAPI","defineComponent","state","preserveRoot","_ref4","enhanceComponentAPI","createAttributeBindings","_ref5","runPlugins","computeState","oldState","newState","addCssHook","_ref6","newProps","mountComponent","componentName","compose","fns","f","g","DOM_COMPONENT_INSTANCE_PROPERTY$1","COMPONENTS_IMPLEMENTATION_MAP$1","PLUGINS_SET$1","register","unregister","keepRootElement","install","plugin","uninstall","implementation","_temp","pure","func","version","__","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","Item","array","nextTick","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","dir","umask","fs","require","path","log","console","NEWLINE","RE_INI_KEY_VAL","RE_NEWLINES","NEWLINES_MATCH","parse","src","debug","obj","split","line","idx","keyValueArr","match","isDoubleQuoted","substring","trim","config","dotenvPath","resolve","encoding","parsed","readFileSync","error","searchGifs","dotenv","query","reqUrl","baseUrl","limit","axios","then","res","onMounted","focus","search","preventDefault","obs","observable","trigger","Spinner","isLoading","response","gifsJson","onBeforeUpdate","gif","images","downsized","url","Search","Result","onBeforeMount","App","getElementById"],"mappings":"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","file":"main.js","sourceRoot":"../../../../js","sourcesContent":["/* Riot v4.13.5, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value;\n    return acc;\n  }, {});\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\nfunction cleanNode(node) {\n  clearChildren(node.childNodes);\n}\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\n\nfunction clearChildren(children) {\n  Array.from(children).forEach(removeNode);\n}\n/**\n * Remove a node from the DOM\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\nfunction removeNode(node) {\n  const {\n    parentNode\n  } = node;\n  if (node.remove) node.remove();\n  /* istanbul ignore else */\n  else if (parentNode) parentNode.removeChild(node);\n}\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n};\n\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    children: Array.from(fragment.childNodes)\n  };\n}\n\nconst {\n  indexOf,\n  slice\n} = [];\n\nconst append = (get, parent, children, start, end, before) => {\n  const isSelect = ('selectedIndex' in parent);\n  let noSelection = isSelect;\n\n  while (start < end) {\n    const child = get(children[start], 1);\n    parent.insertBefore(child, before);\n\n    if (isSelect && noSelection && child.selected) {\n      noSelection = !noSelection;\n      let {\n        selectedIndex\n      } = parent;\n      parent.selectedIndex = selectedIndex < 0 ? start : indexOf.call(parent.querySelectorAll('option'), child);\n    }\n\n    start++;\n  }\n};\nconst eqeq = (a, b) => a == b;\nconst identity = O => O;\nconst indexOf$1 = (moreNodes, moreStart, moreEnd, lessNodes, lessStart, lessEnd, compare) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n\n  if (length < 1) return -1;\n\n  while (moreEnd - moreStart >= length) {\n    let m = moreStart;\n    let l = lessStart;\n\n    while (m < moreEnd && l < lessEnd && compare(moreNodes[m], lessNodes[l])) {\n      m++;\n      l++;\n    }\n\n    if (l === lessEnd) return moreStart;\n    moreStart = m + 1;\n  }\n\n  return -1;\n};\nconst isReversed = (futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare) => {\n  while (currentStart < currentEnd && compare(currentNodes[currentStart], futureNodes[futureEnd - 1])) {\n    currentStart++;\n    futureEnd--;\n  }\n  return futureEnd === 0;\n};\nconst next = (get, list, i, length, before) => i < length ? get(list[i], 0) : 0 < i ? get(list[i - 1], -0).nextSibling : before;\nconst remove = (get, children, start, end) => {\n  while (start < end) drop(get(children[start++], -1));\n}; // - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\nconst HS = (futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges) => {\n  let k = 0;\n  /* istanbul ignore next */\n\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++) tresh[i] = currentEnd;\n\n  const nodes = currentNodes.slice(currentStart, currentEnd);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const index = nodes.indexOf(futureNodes[i]);\n\n    if (-1 < index) {\n      const idxInOld = index + currentStart;\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n\n  while (ptr) {\n    const {\n      newi,\n      oldi\n    } = ptr;\n\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n\n  return diff;\n}; // this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\n\n\nconst OND = (futureNodes, futureStart, rows, currentNodes, currentStart, cols, compare) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND) return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n\n      r = c - k;\n\n      while (c < cols && r < rows && compare(currentNodes[currentStart + c], futureNodes[futureStart + r])) {\n        c++;\n        r++;\n      }\n\n      if (c === cols && r === rows) {\n        break outer;\n      }\n\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n\n  for (d = v.length - 1; d >= 0; d--) {\n    while (c > 0 && r > 0 && compare(currentNodes[currentStart + c - 1], futureNodes[futureStart + r - 1])) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n\n    if (!d) break;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n\n    if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n\n  return diff;\n};\n\nconst applyDiff = (diff, get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before) => {\n  const live = [];\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.push(futureNodes[futureStart]);\n        append(get, parentNode, futureNodes, futureStart++, futureStart, currentIndex < currentLength ? get(currentNodes[currentIndex], 0) : before);\n        break;\n\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n\n  i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (-1 < live.indexOf(currentNodes[currentStart])) currentStart++;else remove(get, currentNodes, currentStart++, currentStart);\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n\n  while (lo < hi) {\n    const mid = (lo + hi) / 2 >>> 0;\n    if (j < ktr[mid]) hi = mid;else lo = mid + 1;\n  }\n\n  return lo;\n};\n\nconst smartDiff = (get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before) => {\n  applyDiff(OND(futureNodes, futureStart, futureChanges, currentNodes, currentStart, currentChanges, compare) || HS(futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges), get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before);\n};\n\nconst drop = node => (node.remove || dropChild).call(node);\n\nfunction dropChild() {\n  const {\n    parentNode\n  } = this;\n  /* istanbul ignore else */\n\n  if (parentNode) parentNode.removeChild(this);\n}\n\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\nconst domdiff = (parentNode, // where changes happen\ncurrentNodes, // Array of current items/nodes\nfutureNodes, // Array of future items/nodes\noptions // optional object with one of the following properties\n//  before: domNode\n//  compare(generic, generic) => true if same generic\n//  node(generic) => Node\n) => {\n  if (!options) options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n  let futureEnd = futureNodes.length;\n  let futureStart = 0; // common prefix\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentStart], futureNodes[futureStart])) {\n    currentStart++;\n    futureStart++;\n  } // common suffix\n\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd; // same list\n\n  if (currentSame && futureSame) return futureNodes; // only stuff to add\n\n  if (currentSame && futureStart < futureEnd) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentStart, currentLength, before));\n    return futureNodes;\n  } // only stuff to remove\n\n\n  if (futureSame && currentStart < currentEnd) {\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1; // 2 simple indels: the shortest sequence is a subsequence of the longest\n\n  if (currentChanges < futureChanges) {\n    i = indexOf$1(futureNodes, futureStart, futureEnd, currentNodes, currentStart, currentEnd, compare); // inner diff\n\n    if (-1 < i) {\n      append(get, parentNode, futureNodes, futureStart, i, get(currentNodes[currentStart], 0));\n      append(get, parentNode, futureNodes, i + currentChanges, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n      i = indexOf$1(currentNodes, currentStart, currentEnd, futureNodes, futureStart, futureEnd, compare); // outer diff\n\n      if (-1 < i) {\n        remove(get, currentNodes, currentStart, i);\n        remove(get, currentNodes, i + futureChanges, currentEnd);\n        return futureNodes;\n      }\n    } // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n\n  /* istanbul ignore else */\n\n\n  if (currentChanges < 2 || futureChanges < 2) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, get(currentNodes[currentStart], 0));\n    remove(get, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  } // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n\n\n  if (currentChanges === futureChanges && isReversed(futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare)) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n    return futureNodes;\n  } // last resort through a smart diff\n\n\n  smartDiff(get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before);\n  return futureNodes;\n};\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n}\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\n\nfunction isTemplate(el) {\n  return !isNil(el.content);\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\n\nfunction isBoolean(value) {\n  return checkType(value, 'boolean');\n}\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\n\nfunction isObject(value) {\n  return !isNil(value) && checkType(value, 'object');\n}\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\n\nfunction isNil(value) {\n  return value === null || value === undefined;\n}\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\nconst EachBinding = Object.seal({\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const {\n      placeholder,\n      nodes,\n      childrenMap\n    } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n    const parent = placeholder.parentNode; // prepare the diffing\n\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this); // patch the DOM only if there are new nodes\n\n    domdiff(parent, nodes, futureNodes, {\n      before: placeholder,\n      node: patch(Array.from(childrenMap.values()), parentScope)\n    }); // trigger the mounts and the updates\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n    return this;\n  }\n\n});\n/**\n * Patch the DOM while diffing\n * @param   {TemplateChunk[]} redundant - redundant tepmplate chunks\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\n\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      const element = redundant.pop();\n\n      if (element) {\n        const {\n          template,\n          context\n        } = element; // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n\n        template.unmount(context, parentScope, null);\n      }\n    }\n\n    return item;\n  };\n}\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\n\nfunction mustFilterItem(condition, context) {\n  return condition ? Boolean(condition(context)) === false : false;\n}\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\n\n\nfunction extendScope(scope, _ref) {\n  let {\n    itemName,\n    indexName,\n    index,\n    item\n  } = _ref;\n  scope[itemName] = item;\n  if (indexName) scope[indexName] = index;\n  return scope;\n}\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EeachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n\n    if (mustFilterItem(condition, context)) {\n      return;\n    }\n\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = oldItem ? componentTemplate.el : root.cloneNode();\n    const mustMount = !oldItem;\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : {};\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta));\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    } // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n\n\n    if (isTemplateTag) {\n      const children = meta.children || componentTemplate.children;\n      futureNodes.push(...children);\n    } else {\n      futureNodes.push(el);\n    } // delete the old item from the children map\n\n\n    childrenMap.delete(key); // update the children map\n\n    newChildrenMap.set(key, {\n      template: componentTemplate,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create(node, _ref2) {\n  let {\n    evaluate,\n    condition,\n    itemName,\n    indexName,\n    getKey,\n    template\n  } = _ref2;\n  const placeholder = document.createTextNode('');\n  const parent = node.parentNode;\n  const root = node.cloneNode();\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n\n/**\n * Binding responsible for the `if` directive\n */\n\nconst IfBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n      this.placeholder.parentNode.insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        break;\n\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n    return this;\n  }\n\n});\nfunction create$1(node, _ref) {\n  let {\n    evaluate,\n    template\n  } = _ref;\n  const parent = node.parentNode;\n  const placeholder = document.createTextNode('');\n  parent.insertBefore(placeholder, node);\n  removeNode(node);\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node)\n  });\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\n\nfunction memoize(fn) {\n  const cache = new Map();\n\n  const cached = val => {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val);\n  };\n\n  cached.cache = cache;\n  return cached;\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return Object.assign({}, acc, value);\n      // value attribute\n\n      case type === VALUE:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst SET_ATTIBUTE = 'setAttribute';\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(name => ElementProto.hasOwnProperty(name)); // eslint-disable-line\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach((_ref) => {\n    let [name, value] = _ref;\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n  Object.keys(oldAttributes).filter(name => !newKeys.includes(name)).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref2, value, oldValue) {\n  let {\n    name\n  } = _ref2;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    } // is the value still truthy?\n\n\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (!isNativeHtmlProperty(name) && (isBoolean(value) || isObject(value) || isFunction(value))) {\n    node[name] = value;\n  }\n\n  node[getMethod(value)](name, normalizeValue(name, value));\n}\n/**\n * Get the attribute modifier method\n * @param   {*} value - if truthy we return `setAttribute` othewise `removeAttribute`\n * @returns {string} the node attribute modifier method name\n */\n\nfunction getMethod(value) {\n  return isNil(value) || value === false || value === '' || isObject(value) || isFunction(value) ? REMOVE_ATTRIBUTE : SET_ATTIBUTE;\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  if (value === true) return name;\n  return value;\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = value => Array.isArray(value) ? value : [value, false]; // see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\n\n\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event);\n  }\n\n};\nconst ListenersWeakMap = new WeakMap();\n\nconst createListener = node => {\n  const listener = Object.create(EventListener);\n  ListenersWeakMap.set(node, listener);\n  return listener;\n};\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\n\n\nfunction eventExpression(node, _ref, value) {\n  let {\n    name\n  } = _ref;\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n  const eventListener = ListenersWeakMap.get(node) || createListener(node);\n  const [callback, options] = getCallbackAndOptions(value);\n  const handler = eventListener[normalizedEventName];\n  const mustRemoveEvent = handler && !callback;\n  const mustAddEvent = callback && !handler;\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener);\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options);\n  }\n\n  eventListener[normalizedEventName] = callback;\n}\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value;\n}\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {HTMLTextNode} the text node to update\n */\n\nconst getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex];\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('');\n    node.replaceChild(textNode, target);\n    return textNode;\n  }\n\n  return target;\n};\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\n\nconst Expression = Object.seal({\n  // Static props\n  // node: null,\n  // value: null,\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    return this;\n  }\n\n});\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$2(node, data) {\n  return Object.assign({}, Expression, data, {\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node\n  });\n}\n\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref) {\n  let {\n    expressions\n  } = _ref;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$2(node, expression)), ['mount', 'update', 'unmount']));\n}\n\n// Riot.js constants that can be used accross more modules\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n      PLUGINS_SET = new Set(),\n      IS_DIRECTIVE = 'is',\n      VALUE_ATTRIBUTE = 'value',\n      MOUNT_METHOD_KEY = 'mount',\n      UPDATE_METHOD_KEY = 'update',\n      UNMOUNT_METHOD_KEY = 'unmount',\n      SHOULD_UPDATE_KEY = 'shouldUpdate',\n      ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n      ON_MOUNTED_KEY = 'onMounted',\n      ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n      ON_UPDATED_KEY = 'onUpdated',\n      ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n      ON_UNMOUNTED_KEY = 'onUnmounted',\n      PROPS_KEY = 'props',\n      STATE_KEY = 'state',\n      SLOTS_KEY = 'slots',\n      ROOT_KEY = 'root',\n      IS_PURE_SYMBOL = Symbol.for('pure'),\n      PARENT_KEY_SYMBOL = Symbol('parent'),\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY,\n  PLUGINS_SET: PLUGINS_SET,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  VALUE_ATTRIBUTE: VALUE_ATTRIBUTE,\n  MOUNT_METHOD_KEY: MOUNT_METHOD_KEY,\n  UPDATE_METHOD_KEY: UPDATE_METHOD_KEY,\n  UNMOUNT_METHOD_KEY: UNMOUNT_METHOD_KEY,\n  SHOULD_UPDATE_KEY: SHOULD_UPDATE_KEY,\n  ON_BEFORE_MOUNT_KEY: ON_BEFORE_MOUNT_KEY,\n  ON_MOUNTED_KEY: ON_MOUNTED_KEY,\n  ON_BEFORE_UPDATE_KEY: ON_BEFORE_UPDATE_KEY,\n  ON_UPDATED_KEY: ON_UPDATED_KEY,\n  ON_BEFORE_UNMOUNT_KEY: ON_BEFORE_UNMOUNT_KEY,\n  ON_UNMOUNTED_KEY: ON_UNMOUNTED_KEY,\n  PROPS_KEY: PROPS_KEY,\n  STATE_KEY: STATE_KEY,\n  SLOTS_KEY: SLOTS_KEY,\n  ROOT_KEY: ROOT_KEY,\n  IS_PURE_SYMBOL: IS_PURE_SYMBOL,\n  PARENT_KEY_SYMBOL: PARENT_KEY_SYMBOL,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL\n});\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope;\n  const expressions = attributes.map(attr => Object.assign({}, attr, {\n    value: attr.evaluate(scope)\n  }));\n  return Object.assign(Object.create(parentScope || null), evaluateAttributeExpressions(expressions));\n} // this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\n\n\nconst getRealParent = (scope, parentScope) => parentScope ? parentScope === scope ? scope[PARENT_KEY_SYMBOL] : parentScope : undefined;\n\nconst SlotBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n\n  // template: null,\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope);\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find((_ref) => {\n      let {\n        id\n      } = _ref;\n      return id === this.name;\n    }) : false;\n    const {\n      parentNode\n    } = this.node;\n    const realParent = getRealParent(scope, parentScope);\n    this.template = templateData && create$6(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      this.template.mount(this.node, this.getTemplateScope(scope, realParent), realParent);\n      this.template.children = moveSlotInnerContent(this.node);\n    }\n\n    removeNode(this.node);\n    return this;\n  },\n\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = getRealParent(scope, parentScope);\n      this.template.update(this.getTemplateScope(scope, realParent), realParent);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot);\n    }\n\n    return this;\n  }\n\n});\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLNode} slot - slot node\n * @param   {HTMLElement} children - array to fill with the child nodes detected\n * @returns {HTMLElement[]} list of the node moved\n */\n\nfunction moveSlotInnerContent(slot, children) {\n  if (children === void 0) {\n    children = [];\n  }\n\n  const child = slot.firstChild;\n\n  if (child) {\n    slot.parentNode.insertBefore(child, slot);\n    return [child, ...moveSlotInnerContent(slot)];\n  }\n\n  return children;\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} options.name - slot id\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(node, _ref2) {\n  let {\n    name,\n    attributes\n  } = _ref2;\n  return Object.assign({}, SlotBinding, {\n    attributes,\n    node,\n    name\n  });\n}\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create$6(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref) => {\n    let {\n      bindings\n    } = _ref;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = Object.seal({\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope, parentScope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this;\n  }\n\n});\nfunction create$4(node, _ref2) {\n  let {\n    evaluate,\n    getComponent,\n    slots,\n    attributes\n  } = _ref2;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$1,\n  [SIMPLE]: create$3,\n  [EACH]: create,\n  [TAG]: create$4,\n  [SLOT]: createSlot\n};\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\n\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? Object.assign({}, e, {\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  }) : e);\n}\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {Object} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\n\n\nfunction create$5(root, binding, templateTagOffset) {\n  const {\n    selector,\n    type,\n    redundantAttribute,\n    expressions\n  } = binding; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || []; // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: templateTagOffset && !selector ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset) : bindingExpressions\n  }));\n}\n\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root);\n  return createHTMLTree(html, root);\n}\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {HTMLFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break;\n\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break;\n\n    default:\n      el.appendChild(dom);\n  }\n}\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string} html - markup that will be injected into the root node\n * @returns {HTMLFragment} fragment that will be injected into the root node\n */\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html);\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope); // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n\n    const {\n      fragment,\n      children,\n      avoidDOMInjection\n    } = meta; // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n\n    const {\n      parentNode\n    } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag ? Math.max(Array.from(parentNode.childNodes).indexOf(el), 0) : null;\n    this.isTemplateTag = isTemplateTag; // create the DOM if it wasn't created before\n\n    this.createDOM(el);\n\n    if (this.dom) {\n      // create the new template dom fragment if it want already passed in via meta\n      this.fragment = fragment || this.dom.cloneNode(true);\n    } // store root node\n    // notice that for template tags the root note will be the parent tag\n\n\n    this.el = this.isTemplateTag ? parentNode : el; // create the children array only for the <template> fragments\n\n    this.children = this.isTemplateTag ? children || Array.from(this.fragment.childNodes) : null; // inject the DOM into the el only if a fragment is available\n\n    if (!avoidDOMInjection && this.fragment) injectDOM(el, this.fragment); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$5(this.el, binding, templateTagOffset));\n    this.bindings.forEach(b => b.mount(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.el) {\n      this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot));\n\n      switch (true) {\n        // <template> tags should be treated a bit differently\n        // we need to clear their children only if it's explicitly required by the caller\n        // via mustRemoveRoot !== null\n        case this.children && mustRemoveRoot !== null:\n          clearChildren(this.children);\n          break;\n        // remove the root node only if the mustRemoveRoot === true\n\n        case mustRemoveRoot === true:\n          removeNode(this.el);\n          break;\n        // otherwise we clean the node children\n\n        case mustRemoveRoot !== null:\n          cleanNode(this.el);\n          break;\n      }\n\n      this.el = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {Array} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create$6(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\n/**\n * Method used to bind expressions to a DOM node\n * @param   {string|HTMLElement} html - your static template html structure\n * @param   {Array} bindings - list of the expressions to bind to update the markup\n * @returns {TemplateChunk} a new TemplateChunk object having the `update`,`mount`, `unmount` and `clone` methods\n *\n * @example\n *\n * riotDOMBindings\n *  .template(\n *   `<div expr0><!----></div><div><p expr1><!----><section expr2></section></p>`,\n *   [\n *     {\n *       selector: '[expr0]',\n *       redundantAttribute: 'expr0',\n *       expressions: [\n *         {\n *           type: expressionTypes.TEXT,\n *           childNodeIndex: 0,\n *           evaluate(scope) {\n *             return scope.time;\n *           },\n *         },\n *       ],\n *     },\n *     {\n *       selector: '[expr1]',\n *       redundantAttribute: 'expr1',\n *       expressions: [\n *         {\n *           type: expressionTypes.TEXT,\n *           childNodeIndex: 0,\n *           evaluate(scope) {\n *             return scope.name;\n *           },\n *         },\n *         {\n *           type: 'attribute',\n *           name: 'style',\n *           evaluate(scope) {\n *             return scope.style;\n *           },\n *         },\n *       ],\n *     },\n *     {\n *       selector: '[expr2]',\n *       redundantAttribute: 'expr2',\n *       type: bindingTypes.IF,\n *       evaluate(scope) {\n *         return scope.isVisible;\n *       },\n *       template: riotDOMBindings.template('hello there'),\n *     },\n *   ]\n * )\n */\n\nvar DOMBindings = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  template: create$6,\n  createBinding: create$5,\n  createExpression: create$2,\n  bindingTypes: bindingTypes,\n  expressionTypes: expressionTypes\n});\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source;\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach((_ref) => {\n    let [key, value] = _ref;\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach((_ref2) => {\n    let [key, value] = _ref2;\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = Object.assign({}, PURE_COMPONENT_API, {\n  clone: noop,\n  createDOM: noop\n});\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\n\nfunction evaluateInitialProps(element, initialProps) {\n  if (initialProps === void 0) {\n    initialProps = {};\n  }\n\n  return Object.assign({}, DOMattributesToObject(element), callOrAssign(initialProps));\n}\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\n\n\nconst bindDOMNodeToComponentObject = (node, component) => node[DOM_COMPONENT_INSTANCE_PROPERTY] = component;\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\n\n\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce((acc, method) => {\n    acc[method] = mapFunction(method);\n    return acc;\n  }, {});\n}\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {Object} components - object containing the nested components\n * @returns {TemplateChunk} template chunk object\n */\n\n\nfunction componentTemplateFactory(template, components) {\n  return template(create$6, expressionTypes, bindingTypes, name => {\n    return components[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name);\n  });\n}\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\n\n\nfunction createPureComponent(pureFactoryFunction, _ref) {\n  let {\n    slots,\n    attributes,\n    props,\n    css,\n    template\n  } = _ref;\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n  const component = defineDefaults(pureFactoryFunction({\n    slots,\n    attributes,\n    props\n  }), PURE_COMPONENT_API);\n  return createCoreAPIMethods(method => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [el] = args;\n      bindDOMNodeToComponentObject(el, component);\n    }\n\n    component[method](...args);\n    return component;\n  });\n}\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {string} options.css - component css\n * @param   {Function} options.template - functon that will return the dom-bindings template function\n * @param   {Object} options.exports - component interface\n * @param   {string} options.name - component name\n * @returns {Object} component like interface\n */\n\n\nfunction createComponent(_ref2) {\n  let {\n    css,\n    template,\n    exports,\n    name\n  } = _ref2;\n  const templateFn = template ? componentTemplateFactory(template, exports ? createSubcomponents(exports.components) : {}) : MOCKED_TEMPLATE_INTERFACE;\n  return (_ref3) => {\n    let {\n      slots,\n      attributes,\n      props\n    } = _ref3;\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL]) return createPureComponent(exports, {\n      slots,\n      attributes,\n      props,\n      css,\n      template\n    });\n    const componentAPI = callOrAssign(exports) || {};\n    const component = defineComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref4) {\n  let {\n    css,\n    template,\n    componentAPI,\n    name\n  } = _ref4;\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    [STATE_KEY]: {}\n  })), Object.assign({\n    // defined during the component creation\n    [SLOTS_KEY]: null,\n    [ROOT_KEY]: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template\n  })));\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\nfunction createAttributeBindings(node, attributes) {\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  const expressions = attributes.map(a => create$2(node, a));\n  const binding = {};\n  return Object.assign(binding, Object.assign({\n    expressions\n  }, createCoreAPIMethods(method => scope => {\n    expressions.forEach(e => e[method](scope));\n    return binding;\n  })));\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref6) {\n  let {\n    slots,\n    attributes,\n    props\n  } = _ref6;\n  return autobindMethods(runPlugins(defineProperties(Object.create(component), {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(element, attributes).mount(parentScope);\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, evaluateInitialProps(element, props), evaluateAttributeExpressions(this[ATTRIBUTES_KEY_SYMBOL].expressions))));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone(); // link this object to the DOM node\n\n      bindDOMNodeToComponentObject(element, this); // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, ROOT_KEY, element); // define the slots array\n\n      defineProperty(this, SLOTS_KEY, slots); // before mount lifecycle event\n\n      this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[PARENT_KEY_SYMBOL] = parentScope; // mount the template\n\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n      this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (parentScope) {\n        this[PARENT_KEY_SYMBOL] = parentScope;\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n      }\n\n      const newProps = evaluateAttributeExpressions(this[ATTRIBUTES_KEY_SYMBOL].expressions);\n      if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false) return;\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, this[PROPS_KEY], newProps)));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n      this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount(); // if the preserveRoot is null the template html will be left untouched\n      // in that case the DOM cleanup will happen differently from a parent node\n\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, this[PARENT_KEY_SYMBOL], preserveRoot === null ? null : !preserveRoot);\n      this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst {\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY$1,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP$1,\n  PLUGINS_SET: PLUGINS_SET$1\n} = globals;\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\nfunction register(name, _ref) {\n  let {\n    css,\n    template,\n    exports\n  } = _ref;\n  if (COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of nodes upgraded\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, initialProps, name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {boolean|null} keepRootElement - if true keep the root element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector, keepRootElement) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY$1]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY$1].unmount(keepRootElement);\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET$1.has(plugin)) panic('This plugin was already installed');\n  PLUGINS_SET$1.add(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET$1.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET$1.delete(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Helper method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return function (el, props, _temp) {\n    let {\n      slots,\n      attributes,\n      parentScope\n    } = _temp === void 0 ? {} : _temp;\n    return compose(c => c.mount(el, parentScope), c => c({\n      props,\n      slots,\n      attributes\n    }), createComponent)(implementation);\n  };\n}\n/**\n * Lift a riot component Interface into a pure riot object\n * @param   {Function} func - RiotPureComponent factory function\n * @returns {Function} the lifted original function received as argument\n */\n\nfunction pure(func) {\n  if (!isFunction(func)) panic('riot.pure accepts only arguments of type \"function\"');\n  func[IS_PURE_SYMBOL] = true;\n  return func;\n}\n/** @type {string} current riot version */\n\nconst version = 'v4.13.5'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  DOMBindings,\n  createComponent,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, pure, register, uninstall, unmount, unregister, version };\n","/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nexport default function domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}","import domToArray from 'bianco.dom-to-array'\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nexport default function $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ?\n    (ctx || document).querySelectorAll(selector) :\n    selector\n  )\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('riot'), require('bianco.query')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'riot', 'bianco.query'], factory) :\n  (global = global || self, factory(global.riotHotReload = {}, global.riot, global.$));\n}(this, (function (exports, riot, $) { 'use strict';\n\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n\n  const { cssManager } = riot.__;\n  const { DOM_COMPONENT_INSTANCE_PROPERTY } = riot.__.globals;\n\n  function reload(componentAPI) {\n    const {name} = componentAPI;\n\n    if (!name) {\n      console.warn('Anonymous components can not be reloaded'); // eslint-disable-line\n      return []\n    }\n\n    return $(`${name}, [is=${name}]`).map(el => {\n      const oldTag = el[DOM_COMPONENT_INSTANCE_PROPERTY];\n\n      // early return in case there is no riot instance found\n      if (!oldTag) return\n\n      // remove the tag template from the DOM\n      oldTag.unmount(true);\n      // delete the old css from the css manager\n      cssManager.remove(name);\n\n      // create the new tag\n      const newTag = riot.component(componentAPI)(el, oldTag.props);\n      newTag.update(oldTag.state);\n\n      return newTag\n    })\n  }\n\n  exports.default = reload;\n  exports.reload = reload;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    if (\n      (utils.isBlob(requestData) || utils.isFile(requestData)) &&\n      requestData.type\n    ) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = unescape(encodeURIComponent(config.auth.password)) || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\n|\\r|\\r\\n/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = options.path\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","import axios from 'axios'\nimport dotenv from 'dotenv'\n\ndotenv.config()\n\nconst searchGifs = (query) => {\n    const key = process.env.API_KEY\n    const baseUrl = \"https://api.giphy.com/v1/gifs/search\"\n    const limit = 25\n    const reqUrl = `${baseUrl}?api_key=${key}&q=${query}&limits=${limit}rating=G`\n\n    return axios\n        .get(reqUrl)\n        .then(({ data: res }) => {\n            return res.data\n        })\n}\n\nexport default searchGifs","import searchGifs from '../../../../utils/api'\n\nexport default {\n  'css': `search input,[is=\"search\"] input{ line-height: 1.5rem; width:100%; padding: 5px; } search input:focus,[is=\"search\"] input:focus{ border-color: #008080; outline: none; } search input::placeholder,[is=\"search\"] input::placeholder{ font-weight: 100; font-style: italic; }`,\n\n  'exports': {\n    onMounted() {\n        this.$('input').focus()\n    },\n\n    search(e) {\n        e.preventDefault()\n        const obs = this.props.observable\n        obs.trigger('start searching')\n        searchGifs(e.target.search.value)\n            .then(data => {\n                e.target.search.value = \"\"\n                obs.trigger('show gifs', data)\n            })\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<form expr0=\"expr0\"><input placeholder=\"Search Giphys\" name=\"search\"/></form>',\n      [{\n        'redundantAttribute': 'expr0',\n        'selector': '[expr0]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onsubmit',\n\n          'evaluate': function(scope) {\n            return scope.search;\n          }\n        }]\n      }]\n    );\n  },\n\n  'name': 'search'\n};","export default {\n  'css': `spinner .sk-chase,[is=\"spinner\"] .sk-chase{ margin: 8rem auto; width: 40px; height: 40px; position: relative; animation: sk-chase 2.5s infinite linear both; } spinner .sk-chase-dot,[is=\"spinner\"] .sk-chase-dot{ width: 100%; height: 100%; position: absolute; left: 0; top: 0; animation: sk-chase-dot 2.0s infinite ease-in-out both; } spinner .sk-chase-dot:before,[is=\"spinner\"] .sk-chase-dot:before{ content: ''; display: block; width: 25%; height: 25%; background-color: #008080; border-radius: 100%; animation: sk-chase-dot-before 2.0s infinite ease-in-out both; } spinner .sk-chase-dot:nth-child(1),[is=\"spinner\"] .sk-chase-dot:nth-child(1){ animation-delay: -1.1s; } spinner .sk-chase-dot:nth-child(2),[is=\"spinner\"] .sk-chase-dot:nth-child(2){ animation-delay: -1.0s; } spinner .sk-chase-dot:nth-child(3),[is=\"spinner\"] .sk-chase-dot:nth-child(3){ animation-delay: -0.9s; } spinner .sk-chase-dot:nth-child(4),[is=\"spinner\"] .sk-chase-dot:nth-child(4){ animation-delay: -0.8s; } spinner .sk-chase-dot:nth-child(5),[is=\"spinner\"] .sk-chase-dot:nth-child(5){ animation-delay: -0.7s; } spinner .sk-chase-dot:nth-child(6),[is=\"spinner\"] .sk-chase-dot:nth-child(6){ animation-delay: -0.6s; } spinner .sk-chase-dot:nth-child(1):before,[is=\"spinner\"] .sk-chase-dot:nth-child(1):before{ animation-delay: -1.1s; } spinner .sk-chase-dot:nth-child(2):before,[is=\"spinner\"] .sk-chase-dot:nth-child(2):before{ animation-delay: -1.0s; } spinner .sk-chase-dot:nth-child(3):before,[is=\"spinner\"] .sk-chase-dot:nth-child(3):before{ animation-delay: -0.9s; } spinner .sk-chase-dot:nth-child(4):before,[is=\"spinner\"] .sk-chase-dot:nth-child(4):before{ animation-delay: -0.8s; } spinner .sk-chase-dot:nth-child(5):before,[is=\"spinner\"] .sk-chase-dot:nth-child(5):before{ animation-delay: -0.7s; } spinner .sk-chase-dot:nth-child(6):before,[is=\"spinner\"] .sk-chase-dot:nth-child(6):before{ animation-delay: -0.6s; } @keyframes sk-chase { 100% { transform: rotate(360deg); } } @keyframes sk-chase-dot { 80%, 100% { transform: rotate(360deg); } } @keyframes sk-chase-dot-before { 50% { transform: scale(0.4); } 100%, 0% { transform: scale(1.0); } }`,\n  'exports': null,\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"sk-chase\"><div class=\"sk-chase-dot\"></div><div class=\"sk-chase-dot\"></div><div class=\"sk-chase-dot\"></div><div class=\"sk-chase-dot\"></div><div class=\"sk-chase-dot\"></div><div class=\"sk-chase-dot\"></div></div>',\n      []\n    );\n  },\n\n  'name': 'spinner'\n};","import Spinner from './spinner.riot'\n\nexport default {\n  'css': null,\n\n  'exports': {\n    components: {\n        Spinner\n    },\n\n    onMounted(props) {\n        const obs = props.observable\n        obs.on('start searching', () => {\n            this.isLoading = true\n        })\n        obs.on('show gifs', response => {\n            console.log(response)\n            this.gifsJson = response\n            this.update()\n        })\n    },\n\n    onBeforeUpdate() {\n        this.isLoading = false\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<h2>Search Results</h2><spinner expr0=\"expr0\"></spinner><ul><li expr1=\"expr1\"></li></ul>',\n      [{\n        'type': bindingTypes.IF,\n\n        'evaluate': function(scope) {\n          return scope.isLoading;\n        },\n\n        'redundantAttribute': 'expr0',\n        'selector': '[expr0]',\n\n        'template': template(null, [{\n          'type': bindingTypes.TAG,\n          'getComponent': getComponent,\n\n          'evaluate': function(scope) {\n            return 'spinner';\n          },\n\n          'slots': [],\n          'attributes': []\n        }])\n      }, {\n        'type': bindingTypes.EACH,\n\n        'getKey': function(scope) {\n          return scope.gif.id;\n        },\n\n        'condition': null,\n\n        'template': template('<img expr2=\"expr2\"/>', [{\n          'redundantAttribute': 'expr2',\n          'selector': '[expr2]',\n\n          'expressions': [{\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'src',\n\n            'evaluate': function(scope) {\n              return scope.gif.images.downsized.url;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'alt',\n\n            'evaluate': function(scope) {\n              return scope.gif.title;\n            }\n          }]\n        }]),\n\n        'redundantAttribute': 'expr1',\n        'selector': '[expr1]',\n        'itemName': 'gif',\n        'indexName': null,\n\n        'evaluate': function(scope) {\n          return scope.gifsJson;\n        }\n      }]\n    );\n  },\n\n  'name': 'result'\n};",";(function(window, undefined) {const ALL_CALLBACKS = '*'\nconst define = Object.defineProperties\nconst entries = Object.entries\n\nconst on = (callbacks, el) => (event, fn) => {\n  if (callbacks.has(event)) {\n    callbacks.get(event).add(fn)\n  } else {\n    callbacks.set(event, new Set().add(fn))\n  }\n\n  return el\n}\n\nconst off = (callbacks, el) => (event, fn) => {\n  if (event === ALL_CALLBACKS && !fn) {\n    callbacks.clear()\n  } else {\n    if (fn) {\n      const fns = callbacks.get(event)\n\n      if (fns) {\n        fns.delete(fn)\n        if (fns.size === 0) callbacks.delete(event)\n      }\n    } else callbacks.delete(event)\n  }\n  return el\n}\n\nconst one = (callbacks, el) => (event, fn) => {\n  function on(...args) {\n    el.off(event, on)\n    fn.apply(el, args)\n  }\n  return el.on(event, on)\n}\n\nconst trigger = (callbacks, el) => (event, ...args) => {\n  const fns = callbacks.get(event)\n\n  if (fns) fns.forEach(fn => fn.apply(el, args))\n\n  if (callbacks.get(ALL_CALLBACKS) && event !== ALL_CALLBACKS) {\n    el.trigger(ALL_CALLBACKS, event, ...args)\n  }\n\n  return el\n}\n\nconst observable = function(el) { // eslint-disable-line\n  const callbacks = new Map()\n  const methods = {on, off, one, trigger}\n\n  el = el || {}\n\n  define(el,\n    entries(methods).reduce((acc, [key, method]) => {\n      acc[key] = {\n        value: method(callbacks, el),\n        enumerable: false,\n        writable: false,\n        configurable: false\n      }\n\n      return acc\n    }, {})\n  )\n\n  return el\n}\n  /* istanbul ignore next */\n  // support CommonJS, AMD & browser\n  if (typeof exports === 'object')\n    module.exports = observable\n  else if (typeof define === 'function' && define.amd)\n    define(function() { return observable })\n  else\n    window.observable = observable\n\n})(typeof window != 'undefined' ? window : undefined);","import Search from './components/search.riot'\nimport Result from './components/result.riot'\nimport observable from '@riotjs/observable'\n\nexport default {\n  'css': null,\n\n  'exports': {\n    components: {\n        Search,\n        Result\n    },\n\n    onBeforeMount(props, state) {\n        this.obs = observable()\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"app-header\"><div class=\"header-left\"><img src=\"https://riot.js.org/img/logo/square.svg\" alt=\"Riot.js logo\" class=\"logo\"/></div><div class=\"header-right\"><h1 expr0=\"expr0\"> </h1><search expr1=\"expr1\"></search></div></div><div class=\"app-body\"><result expr2=\"expr2\"></result></div>',\n      [{\n        'redundantAttribute': 'expr0',\n        'selector': '[expr0]',\n\n        'expressions': [{\n          'type': expressionTypes.TEXT,\n          'childNodeIndex': 0,\n\n          'evaluate': function(scope) {\n            return scope.props.title;\n          }\n        }]\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'search';\n        },\n\n        'slots': [],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'observable',\n\n          'evaluate': function(scope) {\n            return scope.obs;\n          }\n        }],\n\n        'redundantAttribute': 'expr1',\n        'selector': '[expr1]'\n      }, {\n        'type': bindingTypes.TAG,\n        'getComponent': getComponent,\n\n        'evaluate': function(scope) {\n          return 'result';\n        },\n\n        'slots': [],\n\n        'attributes': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'observable',\n\n          'evaluate': function(scope) {\n            return scope.obs;\n          }\n        }],\n\n        'redundantAttribute': 'expr2',\n        'selector': '[expr2]'\n      }]\n    );\n  },\n\n  'name': 'app'\n};","import '@riotjs/hot-reload'\nimport App from './app.riot'\nimport { component } from 'riot'\n\ncomponent(App)(document.getElementById('app'), {\n    title: 'Giphygram'\n})"]}